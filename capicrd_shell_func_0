capicrd() { port_list=`netstat -lnp | grep icrd_child | cut -d ':' -f2 | cut -d " " -f1`;echo -e "starting port_list\n$port_list";echo "starting capture...";tcpdump -s0 -ni lo -w /var/tmp/icrdcap.tmp.pcap &>>/var/tmp/err.log & capture_pid=`ps|grep icrdcap.tmp|grep -v grep|awk '{print $1}'`;while true; do read -t 10 -p "Enter "x" <ENTER> to quite " x;echo "";if [[ $x == "x" ]]; then echo -e "killing tcpdump pid $capture_pid"; kill $capture_pid;break;fi;port_check=`netstat -lnp | grep icrd_child | cut -d ':' -f2 | cut -d " " -f1`;echo -e "\nAll ports used: \n$port_list";echo -e "Current ports in use: \n$port_check";echo -e "checking ports...";for n in $port_check;do if [[ $port_list == *"$n"* ]]; then :;else echo -e "Adding port $n to port_list"; port_list="$port_list $n";fi;done;done;declare -a port_array;filter_ports="";port_array=($port_list);pos=$(( ${#port_array[*]} - 1 ));last=${port_array[$pos]};for PORT in "${port_array[@]}";do if [[ $PORT == $last ]]; then filter_ports="$filter_ports$PORT ";break;else filter_ports="$filter_ports$PORT or ";fi;done;display_filter="port ( $filter_ports )";echo -e "tcpdump diplay filter: $display_filter";capture_name="/var/tmp/icrd_`date +"%F-%H_%M_%S"`.pcap";tcpdump -r /var/tmp/icrdcap.tmp.pcap $display_filter -w $capture_name &>>err.log & echo -e "Files created:\n/var/tmp/icrdcap.tmp.pcap\n$capture_name\n"; };
